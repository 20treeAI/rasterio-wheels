diff --git a/gdal/frmts/vrt/vrtwarped.cpp b/gdal/frmts/vrt/vrtwarped.cpp
index 6c071e9b283..a7333ab2ba0 100644
--- a/gdal/frmts/vrt/vrtwarped.cpp
+++ b/gdal/frmts/vrt/vrtwarped.cpp
@@ -157,39 +157,44 @@ GDALAutoCreateWarpedVRTEx( GDALDatasetH hSrcDS,
     GDALWarpInitDefaultBandMapping( psWO, GDALGetRasterCount( hSrcDS ) );
 
 /* -------------------------------------------------------------------- */
-/*      Setup no data values                                            */
+/*      Setup no data values (if not done in psOptionsIn)               */
 /* -------------------------------------------------------------------- */
-    for( int i = 0; i < psWO->nBandCount; i++ )
+    if( psWO->padfSrcNoDataReal == nullptr &&
+        psWO->padfDstNoDataReal == nullptr &&
+        psWO->nSrcAlphaBand == 0 )
     {
-        GDALRasterBandH rasterBand = GDALGetRasterBand(psWO->hSrcDS, psWO->panSrcBands[i]);
+        for( int i = 0; i < psWO->nBandCount; i++ )
+        {
+            GDALRasterBandH rasterBand = GDALGetRasterBand(psWO->hSrcDS, psWO->panSrcBands[i]);
 
-        int hasNoDataValue;
-        double noDataValue = GDALGetRasterNoDataValue(rasterBand, &hasNoDataValue);
+            int hasNoDataValue;
+            double noDataValue = GDALGetRasterNoDataValue(rasterBand, &hasNoDataValue);
 
-        if( hasNoDataValue )
-        {
-            // Check if the nodata value is out of range
-            int bClamped = FALSE;
-            int bRounded = FALSE;
-            CPL_IGNORE_RET_VAL(
-                GDALAdjustValueToDataType(GDALGetRasterDataType(rasterBand),
-                                      noDataValue, &bClamped, &bRounded ));
-            if( !bClamped )
+            if( hasNoDataValue )
             {
-                GDALWarpInitNoDataReal(psWO, -1e10);
+                // Check if the nodata value is out of range
+                int bClamped = FALSE;
+                int bRounded = FALSE;
+                CPL_IGNORE_RET_VAL(
+                    GDALAdjustValueToDataType(GDALGetRasterDataType(rasterBand),
+                                          noDataValue, &bClamped, &bRounded ));
+                if( !bClamped )
+                {
+                    GDALWarpInitNoDataReal(psWO, -1e10);
 
-                psWO->padfSrcNoDataReal[i] = noDataValue;
-                psWO->padfDstNoDataReal[i] = noDataValue;
+                    psWO->padfSrcNoDataReal[i] = noDataValue;
+                    psWO->padfDstNoDataReal[i] = noDataValue;
+                }
             }
         }
-    }
 
-    if( psWO->padfDstNoDataReal != nullptr )
-    {
-        if (CSLFetchNameValue( psWO->papszWarpOptions, "INIT_DEST" ) == nullptr)
+        if( psWO->padfDstNoDataReal != nullptr )
         {
-            psWO->papszWarpOptions =
-                CSLSetNameValue(psWO->papszWarpOptions, "INIT_DEST", "NO_DATA");
+            if (CSLFetchNameValue( psWO->papszWarpOptions, "INIT_DEST" ) == nullptr)
+            {
+                psWO->papszWarpOptions =
+                    CSLSetNameValue(psWO->papszWarpOptions, "INIT_DEST", "NO_DATA");
+            }
         }
     }
 
